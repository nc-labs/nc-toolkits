{"version":3,"file":"index.modern.js","sources":["../src/constants/customEvents.tsx","../src/hooks/useHeight.tsx","../src/hooks/useWatcher.tsx","../src/utils/history.tsx","../src/components/Header.tsx","../src/utils/getLayoutComponet.tsx","../src/components/LayoutComponent.tsx","../src/components/Main.tsx","../src/utils/getRoutes.tsx","../src/components/Routes.tsx","../src/components/LayoutProvider.tsx","../src/hocs/withLayout.tsx"],"sourcesContent":["const CUSTOM_EVENTS = {\n  'CHANGE_LAYOUTS': 'CHANGE_LAYOUTS',\n}\n\nexport { CUSTOM_EVENTS }\n","import { useMemo, useRef } from 'react'\nimport { useSize } from 'ahooks'\n\nconst useHeight = (): [React.MutableRefObject<null>, number] => {\n  const ref = useRef(null)\n  const size = useSize(ref)\n  const height = useMemo(() => size?.height || 0, [size])\n  return [ref, height]\n}\n\nexport { useHeight }\n","import { useEventListener } from 'ahooks'\n\nconst watcher = {\n  useWatcher: <T,>(name: string, listener: (data: T) => void) => {\n    // @ts-expect-error\n    useEventListener(name, ({ detail }: { detail: T }) => {\n      listener(detail)\n    })\n  },\n  emitWatcher: <T,>(name: string, data: T) =>\n    window.dispatchEvent(new CustomEvent(name, { detail: data })),\n}\n\nexport { watcher }\n","import { createBrowserHistory } from 'history'\n\nconst history = createBrowserHistory()\nexport { history }\n","import styled from 'styled-components'\n\nconst Header = styled.header`\n  position: sticky;\n  top: 0;\n  left: 0;\n  background: white;\n  box-shadow: 0 1px 2px 0 rgb(0 0 0 / 0.05);\n`\n\nexport { Header }\n","import React from 'react'\nimport { lazy } from 'nc-lazy'\n\nconst getLayoutComponet = (\n  component: 'headers' | 'footers' | 'contents',\n  lazyFunction?: (factory: any) => React.LazyExoticComponent<any>\n) => {\n  const importedRoutes = (() => {\n    switch (component) {\n      case 'headers':\n        // @ts-expect-error\n        return import.meta.glob('/src/layouts/headers/*.tsx')\n      case 'footers':\n        // @ts-expect-error\n        return import.meta.glob('/src/layouts/footers/*.tsx')\n      case 'contents':\n        // @ts-expect-error\n        return import.meta.glob('/src/layouts/contents/*.tsx')\n      default:\n        return {}\n    }\n  })()\n  const output = {}\n  const lazyFunc = lazyFunction || lazy\n\n  for (const key in importedRoutes) {\n    // @ts-expect-error\n    output[\n      key.split(new RegExp(`/src/layouts/${component}/|.tsx$|/index.tsx$`, 'g')).join('') || 'index'\n    ] = lazyFunc(importedRoutes[key])\n  }\n\n  return output\n}\n\nexport { getLayoutComponet }\n","import React, { PropsWithChildren, useMemo } from 'react'\nimport { getLayoutComponet } from '../utils/getLayoutComponet'\n\nconst layouts = {\n  headers: getLayoutComponet('headers'),\n  footers: getLayoutComponet('footers'),\n  contents: getLayoutComponet('contents'),\n}\n\nconst LayoutComponent: React.FC<\n  PropsWithChildren<{ component: 'headers' | 'footers' | 'contents'; name: string }>\n> = React.memo(({ name, children, component }) => {\n  const Render = useMemo(() => {\n    if (name === 'none') return React.Fragment\n\n    const collections: Record<string, any> = layouts[component]\n    return collections[name] || collections['index'] || React.Fragment\n  }, [component, name])\n\n  return <Render>{children}</Render>\n})\n\nexport { LayoutComponent }\n","import styled from 'styled-components'\n\nconst Main = styled.main`\n  min-height: ${({\n    headerHeight = 0,\n    footerHeight = 0,\n  }: {\n    headerHeight?: number\n    footerHeight?: number\n  }) => `calc(100vh - ${headerHeight + footerHeight}px)`};\n`\n\nexport { Main }\n","import React from 'react'\nimport { lazy } from 'nc-lazy'\n\nconst getRoutes = (lazyFunction?: (factory: any) => React.LazyExoticComponent<any>) => {\n  // @ts-expect-error\n  const importedRoutes = import.meta.glob('/src/pages/**/[a-z[]*.tsx')\n  const output = []\n  const lazyFunc = lazyFunction || lazy\n\n  for (const key in importedRoutes) {\n    output.push({\n      path: key.split(/\\/src\\/pages|\\.tsx$|\\/index\\.tsx/g).join('') || '/',\n      element: (() => {\n        const Render = lazyFunc(importedRoutes[key])\n        return <Render />\n      })(),\n    })\n  }\n\n  return output\n}\n\nexport { getRoutes }\n","import { useRoutes } from 'react-router-dom'\nimport { getRoutes } from '../utils/getRoutes'\n\nconst routes = getRoutes()\nconst Routes = () => useRoutes(routes)\n\nexport { Routes }\n","import React, { Suspense, useMemo, useState } from 'react'\nimport { unstable_HistoryRouter as HistoryRouter } from 'react-router-dom'\nimport { CUSTOM_EVENTS } from '../constants/customEvents'\nimport { T_LayoutOptions } from '../hocs/withLayout'\nimport { useHeight } from '../hooks/useHeight'\nimport { watcher } from '../hooks/useWatcher'\nimport { history } from '../utils/history'\nimport { Header } from './Header'\nimport { LayoutComponent } from './LayoutComponent'\nimport { Main } from './Main'\nimport { Routes } from './Routes'\n\ntype T_RouterProvider = React.NamedExoticComponent<{\n  fallback?: React.ReactNode\n}>\n\nconst LayoutProvider: T_RouterProvider = React.memo(({ fallback }) => {\n  const pathname = history.location.pathname\n  const [layout, setLayout] = useState<Record<string, T_LayoutOptions>>({})\n  const configs = useMemo(() => layout[pathname], [layout, pathname])\n  const [headerRef, headerHeight] = useHeight()\n  const [footerRef, footerHeight] = useHeight()\n\n  watcher.useWatcher<Record<string, T_LayoutOptions>>(CUSTOM_EVENTS.CHANGE_LAYOUTS, (options) => {\n    setLayout((prev) => ({ ...prev, ...options }))\n  })\n\n  return (\n    // @ts-expect-error\n    <HistoryRouter history={history}>\n      <Suspense fallback={fallback}>\n        {configs?.header && (\n          <Header ref={headerRef}>\n            <LayoutComponent component=\"headers\" name={configs.header} />\n          </Header>\n        )}\n\n        {configs?.content && (\n          <Main headerHeight={headerHeight} footerHeight={footerHeight}>\n            <LayoutComponent component=\"contents\" name={configs?.content}>\n              <Routes />\n            </LayoutComponent>\n          </Main>\n        )}\n\n        {Boolean(configs?.content) || (\n          <main>\n            <Routes />\n          </main>\n        )}\n\n        {configs?.footer && (\n          <footer ref={footerRef}>\n            <LayoutComponent component=\"footers\" name={configs?.footer} />\n          </footer>\n        )}\n      </Suspense>\n    </HistoryRouter>\n  )\n})\n\nexport { LayoutProvider }\n","import React, { useLayoutEffect } from 'react'\nimport { useLocation } from 'react-router-dom'\nimport { CUSTOM_EVENTS } from '../constants/customEvents'\nimport { watcher } from '../hooks/useWatcher'\n\ntype T_LayoutOptions = {\n  header?: string\n  content?: string\n  footer?: string\n}\n\nconst withLayout = (Comment: React.FC<any>, options?: T_LayoutOptions) => () => {\n  const { pathname } = useLocation()\n\n  useLayoutEffect(() => {\n    watcher.emitWatcher(CUSTOM_EVENTS.CHANGE_LAYOUTS, {\n      [pathname]: {\n        header: options?.header || 'index',\n        content: options?.content || 'index',\n        footer: options?.footer || 'index',\n      },\n    })\n  }, [])\n\n  return <Comment />\n}\n\nexport { withLayout }\nexport type { T_LayoutOptions }\n"],"names":["useRef","useSize","ref","useMemo","size","height","useWatcher","name","listener","useEventListener","detail","emitWatcher","data","dispatchEvent","createBrowserHistory","styled","header","component","lazyFunction","meta","glob","lazy","output","key","split","join","lazyFunc","importedRoutes","headers","getLayoutComponet","footers","contents","React","memo","children","Fragment","layouts","collections","Render","main","headerHeight","footerHeight","import","push","path","element","getRoutes","routes","fallback","history","location","pathname","useState","layout","setLayout","useHeight","headerRef","footerRef","watcher","options","prev","HistoryRouter","Suspense","configs","Header","LayoutComponent","content","Main","Routes","Boolean","footer","Comment","useLocation","useLayoutEffect"],"mappings":"opBAAA,UCGkB,WAChB,MAAYA,EAAO,QACNC,EAAQC,GAErB,MAAO,CAACA,EADOC,EAAQ,kBAAMC,MAAAA,SAAAA,EAAMC,SAAU,GAAG,CAACD,QCJnC,CACdE,WAAY,SAAKC,EAAcC,GAE7BC,EAAiBF,EAAM,YACrBC,IADwBE,WAI5BC,YAAa,SAAKJ,EAAcK,iBACvBC,cAAc,gBAAgBN,EAAM,CAAEG,OAAQE,SCRzCE,MCADC,EAAOC,2ICCI,SACxBC,EACAC,GAEA,MAAwB,WACtB,OAAQD,GACN,IAAK,UAEH,cAAcE,KAAKC,KAAK,8BAC1B,IAAK,UAEH,cAAcD,KAAKC,KAAK,8BAC1B,IAAK,WAEH,cAAcD,KAAKC,KAAK,+BAC1B,QACE,MAAO,IAZW,KAeT,KACEF,GAAgBG,EAEjC,IAAK,WAEHC,EACEC,EAAIC,MAAM,2BAA2BP,wBAAgC,MAAMQ,KAAK,KAAO,SACrFC,EAASC,EAAeJ,IAG9B,YC7Bc,CACdK,QAASC,EAAkB,WAC3BC,QAASD,EAAkB,WAC3BE,SAAUF,EAAkB,eAK1BG,EAAMC,KAAK,oBAAG1B,KAAM2B,IAAAA,SAAUjB,IAAAA,YACjBd,EAAQ,WACrB,GAAa,SAATI,EAAiB,SAAa4B,SAElC,MAAyCC,EAAQnB,GACjD,SAAmBV,IAAS8B,EAAmB,OAAKL,EAAMG,UACzD,CAAClB,EAAWV,IAEf,uBAAQ+B,OAAQJ,OCjBLnB,EAAOwB,0CACJ,oBACZC,iBACAC,gDADe,iBACA,gBCFD,SAACvB,GAEjB,MAAuBwB,OAAOvB,KAAKC,KAAK,+BACzB,KACkBC,gBAKnB,MAFZC,EAAOqB,KAAK,CACVC,KAAMrB,EAAIC,MAAM,qCAAqCC,KAAK,KAAO,IACjEoB,WACiBnB,EAASC,EAAeJ,oBAC/Be,YALd,IAAK,gBAUL,SChBaQ,KACA,oBAAgBC,MCYUf,EAAMC,KAAK,oBAAGe,WACpCC,EAAQC,SAASC,WACNC,EAA0C,IAA/DC,OAAQC,SACCnD,EAAQ,oBAAagD,IAAW,CAACE,EAAQF,MACvBI,IAA3BC,OAAWhB,SACgBe,IAA3BE,OAAWhB,OAMlB,OAJAiB,EAAQpD,WVtBU,iBUsBgE,SAACqD,GACjFL,EAAU,SAACM,eAAeA,EAASD,uBAKlCE,GAAcZ,QAASA,GACtBjB,gBAAC8B,GAASd,SAAUA,IACjBe,MAAAA,SAAAA,EAAS/C,SACRgB,gBAACgC,GAAO9D,IAAKsD,GACXxB,gBAACiC,GAAgBhD,UAAU,UAAUV,KAAMwD,EAAQ/C,WAItD+C,MAAAA,SAAAA,EAASG,UACRlC,gBAACmC,GAAK3B,aAAcA,EAAcC,aAAcA,GAC9CT,gBAACiC,GAAgBhD,UAAU,WAAWV,KAAMwD,MAAAA,SAAAA,EAASG,SACnDlC,gBAACoC,UAKNC,QAAQN,MAAAA,SAAAA,EAASG,UAChBlC,4BACEA,gBAACoC,UAIJL,MAAAA,SAAAA,EAASO,SACRtC,0BAAQ9B,IAAKuD,GACXzB,gBAACiC,GAAgBhD,UAAU,UAAUV,KAAMwD,MAAAA,SAAAA,EAASO,gBC1C7C,SAACC,EAAwBZ,qBAC1C,IAAQR,EAAaqB,IAAbrB,SAYR,OAVAsB,EAAgB,iBACdf,EAAQ/C,YXdQ,yBWebwC,GAAW,CACVnC,QAAQ2C,MAAAA,SAAAA,EAAS3C,SAAU,QAC3BkD,SAASP,MAAAA,SAAAA,EAASO,UAAW,QAC7BI,QAAQX,MAAAA,SAAAA,EAASW,SAAU,cAG9B,oBAEKC"}