{"version":3,"file":"index.modern.js","sources":["../src/components/ChunkLoadError.tsx","../src/components/Loading.tsx","../src/components/LazyCompoent.tsx","../src/hooks/useHeight.tsx","../src/utils/Factory.tsx","../src/utils/importGlob.tsx","../src/hocs/withNcLayout.tsx","../src/utils/history.tsx","../src/routes.tsx","../src/components/Link.tsx","../src/components/HistoryRouter.tsx"],"sourcesContent":["// TODO viết 1 component đẹp hơn để thông báo việc lỗi chunk load\nimport React from 'react'\n\nconst ChunkLoadError: React.FC<{ error?: string; onReload: () => void }> = React.memo(\n  ({ onReload, error }) => (\n    <React.Fragment>\n      {error} <button onClick={onReload}>Re-fetch</button>\n    </React.Fragment>\n  )\n)\n\nexport { ChunkLoadError }\n","import React from 'react'\nimport { Loading as NcLoading } from 'nc-simple-loading'\nimport styled from 'styled-components'\n\nconst Loading = React.memo(() => (\n  <LoadingContainer>\n    <NcLoading />\n  </LoadingContainer>\n))\n\nexport { Loading }\n\nconst LoadingContainer = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  height: 100%;\n  width: 100%;\n  z-index: 999999999;\n  background: white;\n  display: flex;\n  align-items: center;\n  justify-contents: space-between;\n`\n","import React, { useCallback, useLayoutEffect } from 'react'\nimport { useBoolean } from 'ahooks'\nimport { Factory } from '../utils/Factory'\nimport { ChunkLoadError } from './ChunkLoadError'\nimport { Loading } from './Loading'\n\nconst delay = (ms?: number) => new Promise((resolve) => setTimeout(resolve, ms || 1000))\n\nconst LazyComponent: React.FC<React.PropsWithChildren<{ factory: Factory }>> = React.memo(\n  ({ factory, children }) => {\n    const [isLoading, { setTrue: onLoading, setFalse: offLoading }] = useBoolean(!factory.isFetched)\n\n    const fetch = useCallback(() => {\n      if (factory.isFetched) return\n\n      onLoading()\n      Promise.all([delay(), factory.fetch()]).finally(offLoading)\n    }, [factory.isFetched])\n\n    useLayoutEffect(fetch, [factory.isFetched])\n\n    if (isLoading) return <Loading />\n    if (factory.error) return <ChunkLoadError error={factory.error} onReload={fetch} />\n    return <factory.Component>{children}</factory.Component>\n  }\n)\n\nexport { LazyComponent }\n","import { useMemo, useRef } from 'react'\nimport { useSize } from 'ahooks'\n\nconst useHeight = (): [React.MutableRefObject<null>, number] => {\n  const ref = useRef(null)\n  const size = useSize(ref)\n  const height = useMemo(() => size?.height || 0, [size])\n  return [ref, height]\n}\n\nexport { useHeight }\n","import React, { memo } from 'react'\nimport { Loading } from '../components/Loading'\n\ntype T_FactoryReturn = () => Promise<{\n  default: React.FC<any> & {\n    factories?: Factory[]\n  }\n}>\n\nclass Factory {\n  factory: T_FactoryReturn\n  isFetched: boolean = false\n  Component: React.FC<any> = Loading\n  error: string = ''\n\n  constructor(factory: T_FactoryReturn) {\n    this.factory = factory\n  }\n\n  fetch = async () => {\n    try {\n      const { default: Component } = await this.factory()\n\n      if (Component.factories) {\n        Promise.all(Component.factories.map((f) => f.fetch()))\n      }\n\n      this.Component = memo(Component)\n      this.isFetched = true\n      this.error = ''\n    } catch (e) {\n      console.error('[nc-toolkits]', e.message)\n      this.error = e.message\n    }\n  }\n}\n\nexport { Factory }\nexport type { T_FactoryReturn }\n","import _ from 'lodash'\nimport { T_FactoryReturn } from './Factory'\n\nconst importGlob = (basePath: string) => {\n  const data = _.pickBy(\n    // @ts-expect-error\n    import.meta.glob('/src/{layouts,pages}/**/*.tsx'),\n    function (__val, key) {\n      return _.startsWith(key, basePath)\n    }\n  )\n\n  const output: Record<string, T_FactoryReturn> = {}\n\n  for (const key in data) {\n    const baseName = key\n      .replace(basePath, '')\n      .replace(/\\.tsx$/, '')\n      .replace(/^\\//, '')\n\n    output[baseName] = data[key]\n  }\n\n  return output\n}\n\nexport { importGlob }\n","import React, { FC, Fragment, memo } from 'react'\nimport _ from 'lodash'\nimport styled from 'styled-components'\nimport { LazyComponent } from '../components/LazyCompoent'\nimport { useHeight } from '../hooks/useHeight'\nimport { Factory } from '../utils/Factory'\nimport { importGlob } from '../utils/importGlob'\n\nconst getLayoutCollections = (component: 'headers' | 'footers' | 'contents') => {\n  const output: Record<string, Factory> = {}\n  const importedCompoents = importGlob(`/src/layouts/${component}`)\n\n  for (const componentPath in importedCompoents) {\n    output[componentPath] = new Factory(importedCompoents[componentPath])\n  }\n\n  return output\n}\n\nconst getLayoutFactory = (\n  component: 'headers' | 'footers' | 'contents',\n  name: string\n): Factory | null => {\n  const collections = getLayoutCollections(component)\n  if (name === 'none' || !collections) return null\n\n  return collections[name] || collections['index'] || null\n}\n\nconst withNcLayout = (\n  Component: FC,\n  options?: {\n    header?: string\n    content?: string\n    footer?: string\n  }\n) => {\n  const MemoComponent = memo(Component)\n  const headerFactory = getLayoutFactory('headers', options?.header || 'index')\n  const contentFactory = getLayoutFactory('contents', options?.content || 'index')\n  const footerFactory = getLayoutFactory('footers', options?.footer || 'index')\n\n  const ReturnedComponent: FC & { factories?: Factory[] } = () => {\n    const [headerRef, headerHeight] = useHeight()\n    const [footerRef, footerHeight] = useHeight()\n\n    return (\n      <Fragment>\n        {headerFactory && (\n          <Header ref={headerRef}>\n            <LazyComponent factory={headerFactory} />\n          </Header>\n        )}\n\n        {contentFactory ? (\n          <Main headerHeight={headerHeight} footerHeight={footerHeight}>\n            <LazyComponent factory={contentFactory}>\n              <MemoComponent />\n            </LazyComponent>\n          </Main>\n        ) : (\n          <main>\n            <MemoComponent />\n          </main>\n        )}\n\n        {footerFactory && (\n          <footer ref={footerRef}>\n            <LazyComponent factory={footerFactory} />\n          </footer>\n        )}\n      </Fragment>\n    )\n  }\n\n  _.set(\n    ReturnedComponent,\n    'factories',\n    [headerFactory, contentFactory, footerFactory].filter((f) => f)\n  )\n\n  return ReturnedComponent\n}\n\nconst Main = styled.main`\n  min-height: ${({\n    headerHeight = 0,\n    footerHeight = 0,\n  }: {\n    headerHeight?: number\n    footerHeight?: number\n  }) => `calc(100vh - ${headerHeight + footerHeight}px)`};\n`\n\nconst Header = styled.header`\n  position: sticky;\n  top: 0;\n  left: 0;\n  background: white;\n  box-shadow: 0 1px 2px 0 rgb(0 0 0 / 0.05);\n`\n\nexport { withNcLayout }\n","import { createBrowserHistory } from 'history'\n\nconst history = createBrowserHistory()\nexport { history }\n","import React from 'react'\nimport _ from 'lodash'\nimport { LazyComponent } from './components/LazyCompoent'\nimport { Factory } from './utils/Factory'\nimport { importGlob } from './utils/importGlob'\n\nconst pathConvert = (path: string) => ['/', path.replace(/index$/, '').toLowerCase()].join('')\nconst slugConvert = (path: string) => path.split(/\\]/).join('').split(/\\/\\[/).join('/:') // thay thees /[slug] thành /:slug\n\nconst pagePathToRoutePath = (pagePath: string) => {\n  const pathWithSlugRegex = /^(\\/[a-z][^\\]/\\s]*|\\/\\[[a-z][^/\\s]*\\])+$|^\\/$/g\n  let path = pathConvert(pagePath)\n\n  if (!pathWithSlugRegex.test(path)) {\n    console.warn('[nc-toolkits]', pagePath, 'is invalid path.')\n    return null\n  } // không tạo route nếu không đúng định dạng\n\n  path = slugConvert(path)\n  return path\n}\n\nconst getRoutes = () => {\n  const importedPages = importGlob('/src/pages')\n  const imported404Page = importGlob('/src/pages/404.tsx')['']\n  const output = []\n\n  for (const pagePath in importedPages) {\n    const path = pagePathToRoutePath(pagePath)\n    if (path) {\n      const factory = new Factory(importedPages[pagePath])\n\n      output.push({\n        path,\n        factory,\n        element: <LazyComponent factory={factory} />,\n      })\n    }\n  }\n\n  const routes = output.map((o) => _.pick(o, ['path', 'element']))\n  const routePreloads = output.map((o) => _.pick(o, ['path', 'factory']))\n\n  // @ts-expect-error\n  if (imported404Page) {\n    const page404Factory = new Factory(importGlob('/src/pages/404.tsx')[''])\n\n    routes.push({\n      path: '*',\n      element: <LazyComponent factory={page404Factory} />,\n    })\n  }\n\n  return {\n    routes,\n    routePreloads,\n  }\n}\n\nconst { routes, routePreloads } = getRoutes()\n\nexport { routePreloads, routes }\n","import React, { useEffect, useMemo, useRef } from 'react'\nimport { useInViewport } from 'ahooks'\nimport { matchPath, Link as DefaultLink } from 'react-router-dom'\nimport { routePreloads } from '../routes'\n\nconst Link: typeof DefaultLink = React.memo(\n  React.forwardRef((props, forwardedRef) => {\n    // @ts-expect-error\n    const ref = useRef(forwardedRef?.current || forwardedRef || null)\n    const [inViewport] = useInViewport(ref)\n\n    const targetPath: string = useMemo(\n      () => (typeof props.to === 'string' ? props.to : props.to.pathname) as string,\n      [JSON.stringify(props.to)]\n    )\n\n    const currentRoute = useMemo(\n      () => routePreloads.find((r) => matchPath(r.path, targetPath)),\n      [targetPath]\n    )\n\n    useEffect(() => {\n      if (!inViewport) return // không thực hiện nếu link chưa hiển thị trên màn hình\n      if (!currentRoute || !currentRoute.factory) return // không thực hiện nếu không tìm được route\n      if (currentRoute.factory.isFetched) return // không thực hiện gì nếu đã được preload\n\n      currentRoute.factory.fetch()\n    }, [inViewport])\n\n    return <DefaultLink {...props} ref={ref} />\n  })\n)\n\nexport { Link }\n","import React, { NamedExoticComponent, memo } from 'react'\nimport { unstable_HistoryRouter as UnstableHistoryRouter, useRoutes } from 'react-router-dom'\nimport { routes } from '../routes'\nimport { history } from '../utils/history'\n\nconst Routes = memo(() => useRoutes(routes))\n\nconst HistoryRouter: NamedExoticComponent = memo(() => (\n  // @ts-expect-error\n  <UnstableHistoryRouter history={history}>\n    <Routes />\n  </UnstableHistoryRouter>\n))\n\nexport { HistoryRouter }\n"],"names":["React","memo","onReload","error","Fragment","onClick","LoadingContainer","NcLoading","styled","div","factory","children","isLoading","setTrue","onLoading","setFalse","offLoading","useBoolean","isFetched","useCallback","Promise","all","resolve","setTimeout","fetch","finally","useLayoutEffect","Loading","ChunkLoadError","Component","useRef","useSize","ref","useMemo","size","height","constructor","this","async","default","factories","map","f","_this","e","console","message","basePath","_","pickBy","import","meta","glob","__val","key","startsWith","output","replace","data","component","name","importGlob","componentPath","importedCompoents","getLayoutCollections","collections","options","getLayoutFactory","header","content","footer","headerRef","headerHeight","useHeight","footerRef","footerHeight","headerFactory","Header","LazyComponent","contentFactory","Main","MemoComponent","footerFactory","set","ReturnedComponent","filter","main","createBrowserHistory","pagePath","path","toLowerCase","join","pathConvert","test","split","slugConvert","warn","routes","routePreloads","pagePathToRoutePath","importedPages","push","element","o","pick","imported404Page","page404Factory","getRoutes","forwardRef","props","forwardedRef","current","inViewport","useInViewport","to","pathname","JSON","stringify","find","r","matchPath","targetPath","useEffect","currentRoute","DefaultLink","useRoutes","UnstableHistoryRouter","history","Routes"],"mappings":"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"}