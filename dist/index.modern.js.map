{"version":3,"file":"index.modern.js","sources":["../src/constants/customEvents.tsx","../src/hooks/useWatcher.tsx","../src/hocs/withLayout.tsx","../src/utils/history.tsx","../src/components/ChunkLoadError.tsx","../src/components/Loading.tsx","../src/components/LazyCompoent.tsx","../src/utils/delay.tsx","../src/utils/Factory.tsx","../src/utils/importGlob.tsx","../src/utils/pagePathToRoutePath.tsx","../src/routes.tsx","../src/utils/getRoutes.tsx","../src/components/Link.tsx","../src/hooks/useHeight.tsx","../src/utils/getLayoutCollections.tsx","../src/components/LayoutComponent.tsx","../src/components/Router.tsx"],"sourcesContent":["const CUSTOM_EVENTS = {\n  'CHANGE_LAYOUTS': 'CHANGE_LAYOUTS',\n}\n\nexport { CUSTOM_EVENTS }\n","import { useEventListener } from 'ahooks'\n\nconst watcher = {\n  useWatcher: <T,>(name: string, listener: (data: T) => void) => {\n    // @ts-expect-error\n    useEventListener(name, ({ detail }: { detail: T }) => {\n      listener(detail)\n    })\n  },\n  emitWatcher: <T,>(name: string, data: T) =>\n    window.dispatchEvent(new CustomEvent(name, { detail: data })),\n}\n\nexport { watcher }\n","import React, { useLayoutEffect } from 'react'\nimport { useLocation } from 'react-router-dom'\nimport { CUSTOM_EVENTS } from '../constants/customEvents'\nimport { watcher } from '../hooks/useWatcher'\n\ntype T_LayoutOptions = {\n  header?: string\n  content?: string\n  footer?: string\n}\n\nconst withLayout = (Comment: React.FC<any>, options?: T_LayoutOptions) => () => {\n  const { pathname } = useLocation()\n\n  useLayoutEffect(() => {\n    watcher.emitWatcher(CUSTOM_EVENTS.CHANGE_LAYOUTS, {\n      [pathname]: {\n        header: options?.header || 'index',\n        content: options?.content || 'index',\n        footer: options?.footer || 'index',\n      },\n    })\n  }, [])\n\n  return <Comment />\n}\n\nexport { withLayout }\nexport type { T_LayoutOptions }\n","import { createBrowserHistory } from 'history'\n\nconst history = createBrowserHistory()\nexport { history }\n","// TODO viết 1 component đẹp hơn để thông báo việc lỗi chunk load\nimport React from 'react'\n\nconst ChunkLoadError: React.FC<{ error?: string; onReload: () => void }> = React.memo(\n  ({ onReload, error }) => (\n    <React.Fragment>\n      {error} <button onClick={onReload}>Re-fetch</button>\n    </React.Fragment>\n  )\n)\n\nexport { ChunkLoadError }\n","import React from 'react'\nimport { Loading as NcLoading } from 'nc-simple-loading'\nimport styled from 'styled-components'\n\nconst Loading = React.memo(() => (\n  <LoadingContainer>\n    <NcLoading />\n  </LoadingContainer>\n))\n\nexport { Loading }\n\nconst LoadingContainer = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  height: 100%;\n  width: 100%;\n  z-index: 999999999;\n  background: white;\n  display: flex;\n  align-items: center;\n  justify-contents: space-between;\n`\n","import React, { useCallback, useLayoutEffect } from 'react'\nimport { useBoolean } from 'ahooks'\nimport { delay } from '../utils/delay'\nimport { Factory } from '../utils/Factory'\nimport { ChunkLoadError } from './ChunkLoadError'\nimport { Loading } from './Loading'\n\nconst LazyComponent: React.FC<React.PropsWithChildren<{ factory: Factory }>> = React.memo(\n  ({ factory, children }) => {\n    const [isLoading, { setTrue: onLoading, setFalse: offLoading }] = useBoolean(!factory.isFetched)\n\n    const fetch = useCallback(() => {\n      if (factory.isFetched) return\n\n      onLoading()\n      Promise.all([delay(), factory.fetch()]).finally(offLoading)\n    }, [factory.isFetched])\n\n    useLayoutEffect(fetch, [factory.isFetched])\n    if (isLoading) return <Loading />\n    if (factory.error) return <ChunkLoadError error={factory.error} onReload={fetch} />\n    return <factory.Component>{children}</factory.Component>\n  }\n)\n\nexport { LazyComponent }\n","const delay = (ms?: number) => new Promise((resolve) => setTimeout(resolve, ms || 1000))\n\nexport { delay }\n","import React from 'react'\nimport { Loading } from '../components/Loading'\nimport { T_Factory } from './lazy'\n\nclass Factory {\n  factory: T_Factory\n  isFetched: boolean = false\n  Component: React.FC<any> = Loading\n  error: string = ''\n  #filePath: string = ''\n\n  constructor(factory: T_Factory) {\n    this.factory = factory\n  }\n\n  fetch = async () => {\n    const maxTryTimes = 3 // cho phép fetch tối đa 3 lần\n\n    for (let index = 0; index < maxTryTimes; index++) {\n      try {\n        const { default: Component } = await this._factory()\n        this.Component = Component\n        this.isFetched = true\n        this.error = ''\n        break // nếu fetch thành công thì done luôn không cần thử lại\n      } catch (e) {\n        const filePath: string = (e?.message || '').match(/http[s]{0,1}:\\/\\/\\S+/)?.[0] || ''\n        this.#filePath = filePath.replace(/[?].+$/, '') // trả về file path thực sự của hàm import, do path sau khi build có thể bị thay đổi tên\n        if (index !== maxTryTimes - 1) continue // nếu chưa phải lần fetch cuối cùng thì không làm gì cả, để vòng for tự tăng và thử load lại lần nữa\n\n        // đây là lần fetch cuối cùng, tức là 3 lần liên tiếp fetch bị lỗi\n        console.error('[nc-toolkits]', e.message)\n        this.error = e.message\n      }\n    }\n  }\n\n  private get _factory(): T_Factory {\n    return this.#filePath ? () => import(`${this.#filePath}?t=${Date.now()}`) : this.factory\n  }\n}\n\nexport { Factory }\n","import _ from 'lodash'\nimport { T_Factory } from './lazy'\n\nconst importGlob = (basePath: string) => {\n  const data = _.pickBy(\n    // @ts-expect-error\n    import.meta.glob('/src/{layouts,pages}/**/*.tsx'),\n    function (__val, key) {\n      return _.startsWith(key, basePath)\n    }\n  )\n\n  const output: Record<string, T_Factory> = {}\n\n  for (const key in data) {\n    const baseName = key\n      .replace(basePath, '')\n      .replace(/\\.tsx$/, '')\n      .replace(/^\\//, '')\n\n    output[baseName] = data[key]\n  }\n\n  return output\n}\n\nexport { importGlob }\n","const pathConvert = (path: string) => ['/', path.replace(/index$/, '').toLowerCase()].join('')\nconst slugConvert = (path: string) => path.split(/\\]/).join('').split(/\\/\\[/).join('/:') // thay thees /[slug] thành /:slug\n\nconst pagePathToRoutePath = (pagePath: string) => {\n  const pathWithSlugRegex = /^(\\/[a-z][^\\]/\\s]*|\\/\\[[a-z][^/\\s]*\\])+$|^\\/$/g\n  let path = pathConvert(pagePath)\n\n  if (!pathWithSlugRegex.test(path)) {\n    console.warn('[nc-toolkits]', pagePath, 'is invalid path.')\n    return null\n  } // không tạo route nếu không đúng định dạng\n\n  path = slugConvert(path)\n  return path\n}\n\n// TODO xử lý trường hợp 2 slug trùng tên\nexport { pagePathToRoutePath }\n","import { getRoutes } from './utils/getRoutes'\n\nconst { routes, routePreloads } = getRoutes()\n\nexport { routePreloads, routes }\n","import React from 'react'\nimport _ from 'lodash'\nimport { LazyComponent } from '../components/LazyCompoent'\nimport { Factory } from './Factory'\nimport { importGlob } from './importGlob'\nimport { pagePathToRoutePath } from './pagePathToRoutePath'\n\nconst getRoutes = () => {\n  const importedPages = importGlob('/src/pages')\n  const output = []\n\n  for (const pagePath in importedPages) {\n    const path = pagePathToRoutePath(pagePath)\n    if (path) {\n      const factory = new Factory(importedPages[pagePath])\n\n      output.push({\n        path,\n        factory,\n        element: <LazyComponent factory={factory} />,\n      })\n    }\n  }\n\n  return {\n    routes: output.map((o) => _.pick(o, ['path', 'element'])),\n    routePreloads: output.map((o) => _.pick(o, ['path', 'factory'])),\n  }\n}\n\nexport { getRoutes }\n","import React, { useEffect, useMemo, useRef } from 'react'\nimport { useInViewport } from 'ahooks'\nimport { matchPath, Link as DefaultLink } from 'react-router-dom'\nimport { routePreloads } from '../routes'\n\nconst Link: typeof DefaultLink = React.memo(\n  React.forwardRef((props, forwardedRef) => {\n    // @ts-expect-error\n    const ref = useRef(forwardedRef?.current || forwardedRef || null)\n    const [inViewport] = useInViewport(ref)\n\n    const targetPath: string = useMemo(\n      () => (typeof props.to === 'string' ? props.to : props.to.pathname) as string,\n      [JSON.stringify(props.to)]\n    )\n\n    const currentRoute = useMemo(\n      () => routePreloads.find((r) => matchPath(r.path, targetPath)),\n      [targetPath]\n    )\n\n    useEffect(() => {\n      if (!inViewport) return // không thực hiện nếu link chưa hiển thị trên màn hình\n      if (!currentRoute || !currentRoute.factory) return // không thực hiện nếu không tìm được route\n      if (currentRoute.factory.isFetched) return // không thực hiện gì nếu đã được preload\n\n      currentRoute.factory.fetch()\n    }, [inViewport])\n\n    return <DefaultLink {...props} ref={ref} />\n  })\n)\n\nexport { Link }\n","import { useMemo, useRef } from 'react'\nimport { useSize } from 'ahooks'\n\nconst useHeight = (): [React.MutableRefObject<null>, number] => {\n  const ref = useRef(null)\n  const size = useSize(ref)\n  const height = useMemo(() => size?.height || 0, [size])\n  return [ref, height]\n}\n\nexport { useHeight }\n","import { Factory } from './Factory'\nimport { importGlob } from './importGlob'\n\nconst getLayoutCollections = (component: 'headers' | 'footers' | 'contents') => {\n  const output: Record<string, Factory> = {}\n  const importedCompoents = importGlob(`/src/layouts/${component}`)\n\n  for (const componentPath in importedCompoents) {\n    output[componentPath] = new Factory(importedCompoents[componentPath])\n  }\n\n  return output\n}\n\nexport { getLayoutCollections }\n","import React, { PropsWithChildren, useMemo } from 'react'\nimport { Factory } from '../utils/Factory'\nimport { getLayoutCollections } from '../utils/getLayoutCollections'\nimport { LazyComponent } from './LazyCompoent'\n\nconst layouts = {\n  headers: getLayoutCollections('headers'),\n  footers: getLayoutCollections('footers'),\n  contents: getLayoutCollections('contents'),\n}\n\nconst LayoutComponent: React.FC<\n  PropsWithChildren<{ component: 'headers' | 'footers' | 'contents'; name: string }>\n> = React.memo(({ name, children, component }) => {\n  const factory: Factory | null = useMemo(() => {\n    const collections = layouts[component]\n    if (name === 'none' || !collections) return null\n\n    return collections[name] || collections['index'] || null\n  }, [component, name])\n\n  if (!factory) return <React.Fragment>{children}</React.Fragment>\n  return <LazyComponent factory={factory}>{children}</LazyComponent>\n})\n\nexport { LayoutComponent }\n","import React, { useMemo, useState } from 'react'\nimport { unstable_HistoryRouter as HistoryRouter, useRoutes } from 'react-router-dom'\nimport styled from 'styled-components'\nimport { CUSTOM_EVENTS } from '../constants/customEvents'\nimport { T_LayoutOptions } from '../hocs/withLayout'\nimport { useHeight } from '../hooks/useHeight'\nimport { watcher } from '../hooks/useWatcher'\nimport { routes } from '../routes'\nimport { history } from '../utils/history'\nimport { LayoutComponent } from './LayoutComponent'\n\ntype T_RouterProvider = React.NamedExoticComponent<{\n  fallback?: React.ReactNode\n}>\n\nconst Router: T_RouterProvider = React.memo(() => {\n  const pathname = history.location.pathname\n  const [layout, setLayout] = useState<Record<string, T_LayoutOptions>>({})\n  const configs = useMemo(() => layout[pathname], [layout, pathname])\n  const [headerRef, headerHeight] = useHeight()\n  const [footerRef, footerHeight] = useHeight()\n\n  watcher.useWatcher<Record<string, T_LayoutOptions>>(CUSTOM_EVENTS.CHANGE_LAYOUTS, (options) => {\n    setLayout((prev) => ({ ...prev, ...options }))\n  })\n\n  return (\n    // @ts-expect-error\n    <HistoryRouter history={history}>\n      {/* <Suspense fallback={fallback}> */}\n      {configs?.header && (\n        <Header ref={headerRef}>\n          <LayoutComponent component=\"headers\" name={configs.header} />\n        </Header>\n      )}\n\n      {configs?.content && (\n        <Main headerHeight={headerHeight} footerHeight={footerHeight}>\n          <LayoutComponent component=\"contents\" name={configs?.content}>\n            <Routes />\n          </LayoutComponent>\n        </Main>\n      )}\n\n      {Boolean(configs?.content) || (\n        <main>\n          <Routes />\n        </main>\n      )}\n\n      {configs?.footer && (\n        <footer ref={footerRef}>\n          <LayoutComponent component=\"footers\" name={configs?.footer} />\n        </footer>\n      )}\n      {/* </Suspense> */}\n    </HistoryRouter>\n  )\n})\n\nexport { Router }\n\nconst Main = styled.main`\n  min-height: ${({\n    headerHeight = 0,\n    footerHeight = 0,\n  }: {\n    headerHeight?: number\n    footerHeight?: number\n  }) => `calc(100vh - ${headerHeight + footerHeight}px)`};\n`\n\nconst Header = styled.header`\n  position: sticky;\n  top: 0;\n  left: 0;\n  background: white;\n  box-shadow: 0 1px 2px 0 rgb(0 0 0 / 0.05);\n`\n\nconst Routes = React.memo(() => useRoutes(routes))\n"],"names":["useWatcher","name","listener","useEventListener","detail","emitWatcher","data","window","dispatchEvent","Comment","options","pathname","useLocation","useLayoutEffect","watcher","[object Object]","header","content","footer","createBrowserHistory","React","memo","onReload","error","Fragment","onClick","LoadingContainer","NcLoading","styled","div","factory","children","isLoading","setTrue","onLoading","setFalse","offLoading","useBoolean","isFetched","useCallback","Promise","all","resolve","setTimeout","fetch","finally","Loading","ChunkLoadError","Component","constructor","this","_classPrivateFieldLooseBase","async","index","default","_factory","_this","e","message","match","_match","filePath","replace","maxTryTimes","console","import","Date","now","basePath","_","pickBy","meta","glob","__val","key","startsWith","output","pagePath","path","toLowerCase","join","pathConvert","test","split","slugConvert","warn","routes","routePreloads","importGlob","pagePathToRoutePath","importedPages","push","element","LazyComponent","map","o","pick","getRoutes","forwardRef","props","forwardedRef","useRef","current","inViewport","useInViewport","ref","useMemo","to","JSON","stringify","find","r","matchPath","targetPath","useEffect","currentRoute","DefaultLink","useSize","size","height","component","componentPath","importedCompoents","headers","getLayoutCollections","footers","contents","layouts","collections","Router","history","location","layout","setLayout","useState","headerRef","headerHeight","useHeight","footerRef","footerHeight","prev","HistoryRouter","configs","Header","LayoutComponent","Main","Routes","Boolean","main","useRoutes"],"mappings":"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"}