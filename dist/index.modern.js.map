{"version":3,"file":"index.modern.js","sources":["../src/constants/customEvents.tsx","../src/hooks/useWatcher.tsx","../src/hocs/withLayout.tsx","../src/utils/history.tsx","../src/utils/lazy.tsx","../src/components/Routes.tsx","../src/utils/getRoutes.tsx","../src/components/Link.tsx","../src/hooks/useHeight.tsx","../src/components/Header.tsx","../src/utils/getLayoutComponet.tsx","../src/components/LayoutComponent.tsx","../src/components/Main.tsx","../src/components/Router.tsx"],"sourcesContent":["const CUSTOM_EVENTS = {\n  'CHANGE_LAYOUTS': 'CHANGE_LAYOUTS',\n}\n\nexport { CUSTOM_EVENTS }\n","import { useEventListener } from 'ahooks'\n\nconst watcher = {\n  useWatcher: <T,>(name: string, listener: (data: T) => void) => {\n    // @ts-expect-error\n    useEventListener(name, ({ detail }: { detail: T }) => {\n      listener(detail)\n    })\n  },\n  emitWatcher: <T,>(name: string, data: T) =>\n    window.dispatchEvent(new CustomEvent(name, { detail: data })),\n}\n\nexport { watcher }\n","import React, { useLayoutEffect } from 'react'\nimport { useLocation } from 'react-router-dom'\nimport { CUSTOM_EVENTS } from '../constants/customEvents'\nimport { watcher } from '../hooks/useWatcher'\n\ntype T_LayoutOptions = {\n  header?: string\n  content?: string\n  footer?: string\n}\n\nconst withLayout = (Comment: React.FC<any>, options?: T_LayoutOptions) => () => {\n  const { pathname } = useLocation()\n\n  useLayoutEffect(() => {\n    watcher.emitWatcher(CUSTOM_EVENTS.CHANGE_LAYOUTS, {\n      [pathname]: {\n        header: options?.header || 'index',\n        content: options?.content || 'index',\n        footer: options?.footer || 'index',\n      },\n    })\n  }, [])\n\n  return <Comment />\n}\n\nexport { withLayout }\nexport type { T_LayoutOptions }\n","import { createBrowserHistory } from 'history'\n\nconst history = createBrowserHistory()\nexport { history }\n","// TODO viết custom lazy dựa trên React.lazy để thực hiện retry khi load lazy component lỗi\nimport React from 'react'\n\ntype T_Factory = (() => Promise<{ default: React.FC<any> }>) & {\n  isPreloaded?: boolean\n  Component?: React.FC<any>\n}\n\nconst delay = () => new Promise((resolve) => setTimeout(resolve, 1000))\n\nconst factoryWithMinTime =\n  (factory: T_Factory): T_Factory =>\n  () => {\n    if (factory.isPreloaded) return factory()\n\n    return Promise.all([factory(), delay()]).then(([moduleExports]) => {\n      factory.Component = moduleExports.default\n\n      return moduleExports\n    })\n  }\n\nconst lazy = (factory: T_Factory) =>\n  factory.isPreloaded && factory.Component\n    ? factory.Component\n    : React.lazy(factoryWithMinTime(factory))\n\nexport { lazy }\nexport type { T_Factory }\n","import { useRoutes } from 'react-router-dom'\nimport { getRoutes } from '../utils/getRoutes'\n\nconst { routes, routePreloads } = getRoutes()\nconst Routes = () => useRoutes(routes)\n\nexport { Routes, routePreloads, routes }\n","import React from 'react'\nimport _ from 'lodash'\nimport { T_Factory, lazy } from './lazy'\n\n// TODO xử lý trường hợp 2 slug trùng tên\nconst getRoutes = (lazyFunction?: (factory: any) => React.LazyExoticComponent<any>) => {\n  // @ts-expect-error\n  const importedRoutes: Record<string, T_Factory> = import.meta.glob('/src/pages/**/[a-z[]*.tsx')\n  const output = []\n  const lazyFunc = lazyFunction || lazy\n\n  for (const key in importedRoutes) {\n    const pathWithSlugRegex = /^(\\/[a-z][^\\]/\\s]*|\\/\\[[a-z][^/\\s]*\\])+$|^\\/$/g\n    let path =\n      key\n        .split(/\\/src\\/pages|\\.tsx$|\\/index\\.tsx$/g)\n        .join('')\n        .toLowerCase() || '/'\n\n    if (!pathWithSlugRegex.test(path)) {\n      console.warn('[nc-toolkits]', key, 'is invalid path.')\n      continue\n    } // không tạo route nếu không đúng định dạng\n\n    path = path.split(/\\]/).join('').split(/\\/\\[/).join('/:') // thay thees /[slug] thành /:slug\n\n    output.push({\n      path,\n      element: (() => {\n        const Render = lazyFunc(importedRoutes[key])\n        return <Render />\n      })(),\n      preload: importedRoutes[key],\n    })\n  }\n\n  return {\n    routes: output.map((o) => _.pick(o, ['path', 'element'])),\n    routePreloads: output.map((o) => _.pick(o, ['path', 'preload'])),\n  }\n}\n\nexport { getRoutes }\n","import React, { useEffect, useMemo, useRef } from 'react'\nimport { useInViewport } from 'ahooks'\nimport { matchPath, Link as DefaultLink } from 'react-router-dom'\nimport { T_Factory } from '../utils/lazy'\nimport { routePreloads } from './Routes'\n\nconst Link: typeof DefaultLink = React.memo(\n  React.forwardRef((props, forwardedRef) => {\n    // @ts-expect-error\n    const ref = useRef(forwardedRef?.current || forwardedRef || null)\n    const [inViewport] = useInViewport(ref)\n\n    const targetPath: string = useMemo(\n      () => (typeof props.to === 'string' ? props.to : props.to.pathname) as string,\n      [JSON.stringify(props.to)]\n    )\n\n    type T_PreloadFn = T_Factory | undefined\n    const preloadFn: T_PreloadFn = useMemo(\n      () => routePreloads.find((r) => matchPath(r.path, targetPath))?.preload,\n      [targetPath]\n    )\n\n    useEffect(() => {\n      if (!inViewport) return // không thực hiện nếu link chưa hiển thị trên màn hình\n      if (!preloadFn) return // không thực hiện nếu không có preloadFn\n      if (preloadFn.isPreloaded) return // không thực hiện gì nếu đã được preload\n\n      preloadFn()\n      preloadFn.isPreloaded = true\n    }, [inViewport])\n\n    return <DefaultLink {...props} ref={ref} />\n  })\n)\n\nexport { Link }\n","import { useMemo, useRef } from 'react'\nimport { useSize } from 'ahooks'\n\nconst useHeight = (): [React.MutableRefObject<null>, number] => {\n  const ref = useRef(null)\n  const size = useSize(ref)\n  const height = useMemo(() => size?.height || 0, [size])\n  return [ref, height]\n}\n\nexport { useHeight }\n","import styled from 'styled-components'\n\nconst Header = styled.header`\n  position: sticky;\n  top: 0;\n  left: 0;\n  background: white;\n  box-shadow: 0 1px 2px 0 rgb(0 0 0 / 0.05);\n`\n\nexport { Header }\n","import React from 'react'\nimport { lazy } from 'nc-lazy'\n\nconst getLayoutComponet = (\n  component: 'headers' | 'footers' | 'contents',\n  lazyFunction?: (factory: any) => React.LazyExoticComponent<any>\n) => {\n  const importedRoutes = (() => {\n    switch (component) {\n      case 'headers':\n        // @ts-expect-error\n        return import.meta.glob('/src/layouts/headers/*.tsx')\n      case 'footers':\n        // @ts-expect-error\n        return import.meta.glob('/src/layouts/footers/*.tsx')\n      case 'contents':\n        // @ts-expect-error\n        return import.meta.glob('/src/layouts/contents/*.tsx')\n      default:\n        return {}\n    }\n  })()\n  const output = {}\n  const lazyFunc = lazyFunction || lazy\n\n  for (const key in importedRoutes) {\n    // @ts-expect-error\n    output[\n      key.split(new RegExp(`/src/layouts/${component}/|.tsx$|/index.tsx$`, 'g')).join('') || 'index'\n    ] = lazyFunc(importedRoutes[key])\n  }\n\n  return output\n}\n\nexport { getLayoutComponet }\n","import React, { PropsWithChildren, useMemo } from 'react'\nimport { getLayoutComponet } from '../utils/getLayoutComponet'\n\nconst layouts = {\n  headers: getLayoutComponet('headers'),\n  footers: getLayoutComponet('footers'),\n  contents: getLayoutComponet('contents'),\n}\n\nconst LayoutComponent: React.FC<\n  PropsWithChildren<{ component: 'headers' | 'footers' | 'contents'; name: string }>\n> = React.memo(({ name, children, component }) => {\n  const Render = useMemo(() => {\n    if (name === 'none') return React.Fragment\n\n    const collections: Record<string, any> = layouts[component]\n    return collections[name] || collections['index'] || React.Fragment\n  }, [component, name])\n\n  return <Render>{children}</Render>\n})\n\nexport { LayoutComponent }\n","import styled from 'styled-components'\n\nconst Main = styled.main`\n  min-height: ${({\n    headerHeight = 0,\n    footerHeight = 0,\n  }: {\n    headerHeight?: number\n    footerHeight?: number\n  }) => `calc(100vh - ${headerHeight + footerHeight}px)`};\n`\n\nexport { Main }\n","import React, { Suspense, useMemo, useState } from 'react'\nimport { unstable_HistoryRouter as HistoryRouter } from 'react-router-dom'\nimport { CUSTOM_EVENTS } from '../constants/customEvents'\nimport { T_LayoutOptions } from '../hocs/withLayout'\nimport { useHeight } from '../hooks/useHeight'\nimport { watcher } from '../hooks/useWatcher'\nimport { history } from '../utils/history'\nimport { Header } from './Header'\nimport { LayoutComponent } from './LayoutComponent'\nimport { Main } from './Main'\nimport { Routes } from './Routes'\n\ntype T_RouterProvider = React.NamedExoticComponent<{\n  fallback?: React.ReactNode\n}>\n\nconst Router: T_RouterProvider = React.memo(({ fallback }) => {\n  const pathname = history.location.pathname\n  const [layout, setLayout] = useState<Record<string, T_LayoutOptions>>({})\n  const configs = useMemo(() => layout[pathname], [layout, pathname])\n  const [headerRef, headerHeight] = useHeight()\n  const [footerRef, footerHeight] = useHeight()\n\n  watcher.useWatcher<Record<string, T_LayoutOptions>>(CUSTOM_EVENTS.CHANGE_LAYOUTS, (options) => {\n    setLayout((prev) => ({ ...prev, ...options }))\n  })\n\n  return (\n    // @ts-expect-error\n    <HistoryRouter history={history}>\n      <Suspense fallback={fallback}>\n        {configs?.header && (\n          <Header ref={headerRef}>\n            <LayoutComponent component=\"headers\" name={configs.header} />\n          </Header>\n        )}\n\n        {configs?.content && (\n          <Main headerHeight={headerHeight} footerHeight={footerHeight}>\n            <LayoutComponent component=\"contents\" name={configs?.content}>\n              <Routes />\n            </LayoutComponent>\n          </Main>\n        )}\n\n        {Boolean(configs?.content) || (\n          <main>\n            <Routes />\n          </main>\n        )}\n\n        {configs?.footer && (\n          <footer ref={footerRef}>\n            <LayoutComponent component=\"footers\" name={configs?.footer} />\n          </footer>\n        )}\n      </Suspense>\n    </HistoryRouter>\n  )\n})\n\nexport { Router }\n"],"names":["useWatcher","name","listener","useEventListener","detail","emitWatcher","data","window","dispatchEvent","Comment","options","pathname","useLocation","useLayoutEffect","watcher","[object Object]","header","content","footer","createBrowserHistory","factory","isPreloaded","Component","React","lazy","all","resolve","setTimeout","then","moduleExports","default","factoryWithMinTime","routes","routePreloads","lazyFunction","import","meta","glob","key","split","join","toLowerCase","pathWithSlugRegex","test","path","output","push","element","lazyFunc","importedRoutes","Render","preload","console","warn","map","o","_","pick","getRoutes","useRoutes","memo","forwardRef","props","forwardedRef","useRef","current","inViewport","useInViewport","ref","useMemo","to","JSON","stringify","find","r","matchPath","targetPath","_routePreloads$find","useEffect","preloadFn","DefaultLink","useSize","size","height","styled","component","headers","getLayoutComponet","footers","contents","children","Fragment","layouts","collections","main","headerHeight","footerHeight","fallback","history","location","layout","setLayout","useState","headerRef","useHeight","footerRef","prev","HistoryRouter","Suspense","configs","Header","LayoutComponent","Main","Routes","Boolean"],"mappings":"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"}