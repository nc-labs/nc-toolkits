{"version":3,"file":"index.js","sources":["../src/hooks/useWatcher.tsx","../src/utils/history.tsx","../src/utils/lazy.tsx","../src/utils/getRoutes.tsx","../src/components/Routes.tsx","../src/components/Link.tsx","../src/hooks/useHeight.tsx","../src/components/Header.tsx","../src/utils/getLayoutComponet.tsx","../src/components/LayoutComponent.tsx","../src/components/Main.tsx","../src/components/Router.tsx","../src/constants/customEvents.tsx","../src/hocs/withLayout.tsx"],"sourcesContent":["import { useEventListener } from 'ahooks'\n\nconst watcher = {\n  useWatcher: <T,>(name: string, listener: (data: T) => void) => {\n    // @ts-expect-error\n    useEventListener(name, ({ detail }: { detail: T }) => {\n      listener(detail)\n    })\n  },\n  emitWatcher: <T,>(name: string, data: T) =>\n    window.dispatchEvent(new CustomEvent(name, { detail: data })),\n}\n\nexport { watcher }\n","import { createBrowserHistory } from 'history'\n\nconst history = createBrowserHistory()\nexport { history }\n","// TODO viết custom lazy dựa trên React.lazy để thực hiện retry khi load lazy component lỗi\nimport React from 'react'\n\ntype T_Factory = (() => Promise<{ default: React.FC<any> }>) & {\n  isPreloaded?: boolean\n  Component?: React.FC<any>\n}\n\nconst delay = () => new Promise((resolve) => setTimeout(resolve, 1000))\n\nconst factoryWithMinTime =\n  (factory: T_Factory): T_Factory =>\n  () => {\n    if (factory.isPreloaded) return factory()\n\n    return Promise.all([factory(), delay()]).then(([moduleExports]) => {\n      factory.Component = moduleExports.default\n\n      return moduleExports\n    })\n  }\n\nconst lazy = (factory: T_Factory) =>\n  factory.isPreloaded && factory.Component\n    ? factory.Component\n    : React.lazy(factoryWithMinTime(factory))\n\nexport { lazy }\nexport type { T_Factory }\n","import React from 'react'\nimport _ from 'lodash'\nimport { T_Factory, lazy } from './lazy'\n\n// TODO xử lý trường hợp 2 slug trùng tên\nconst getRoutes = (lazyFunction?: (factory: any) => React.LazyExoticComponent<any>) => {\n  // @ts-expect-error\n  const importedRoutes: Record<string, T_Factory> = import.meta.glob('/src/pages/**/[a-z[]*.tsx')\n  const output = []\n  const lazyFunc = lazyFunction || lazy\n\n  for (const key in importedRoutes) {\n    const pathWithSlugRegex = /^(\\/[a-z][^\\]/\\s]*|\\/\\[[a-z][^/\\s]*\\])+$|^\\/$/g\n    let path =\n      key\n        .split(/\\/src\\/pages|\\.tsx$|\\/index\\.tsx$/g)\n        .join('')\n        .toLowerCase() || '/'\n\n    if (!pathWithSlugRegex.test(path)) {\n      console.warn('[nc-toolkits]', key, 'is invalid path.')\n      continue\n    } // không tạo route nếu không đúng định dạng\n\n    path = path.split(/\\]/).join('').split(/\\/\\[/).join('/:') // thay thees /[slug] thành /:slug\n\n    output.push({\n      path,\n      element: (() => {\n        const Render = lazyFunc(importedRoutes[key])\n        return <Render />\n      })(),\n      preload: importedRoutes[key],\n    })\n  }\n\n  return {\n    routes: output.map((o) => _.pick(o, ['path', 'element'])),\n    routePreloads: output.map((o) => _.pick(o, ['path', 'preload'])),\n  }\n}\n\nexport { getRoutes }\n","import { useRoutes } from 'react-router-dom'\nimport { getRoutes } from '../utils/getRoutes'\n\nconst { routes, routePreloads } = getRoutes()\nconst Routes = () => useRoutes(routes)\n\nexport { Routes, routePreloads, routes }\n","import React, { useEffect, useMemo, useRef } from 'react'\nimport { useInViewport } from 'ahooks'\nimport { matchPath, Link as DefaultLink } from 'react-router-dom'\nimport { T_Factory } from '../utils/lazy'\nimport { routePreloads } from './Routes'\n\nconst Link: typeof DefaultLink = React.memo(\n  React.forwardRef((props, forwardedRef) => {\n    // @ts-expect-error\n    const ref = useRef(forwardedRef?.current || forwardedRef || null)\n    const [inViewport] = useInViewport(ref)\n\n    const targetPath: string = useMemo(\n      () => (typeof props.to === 'string' ? props.to : props.to.pathname) as string,\n      [JSON.stringify(props.to)]\n    )\n\n    type T_PreloadFn = T_Factory | undefined\n    const preloadFn: T_PreloadFn = useMemo(\n      () => routePreloads.find((r) => matchPath(r.path, targetPath))?.preload,\n      [targetPath]\n    )\n\n    useEffect(() => {\n      if (!inViewport) return // không thực hiện nếu link chưa hiển thị trên màn hình\n      if (!preloadFn) return // không thực hiện nếu không có preloadFn\n      if (preloadFn.isPreloaded) return // không thực hiện gì nếu đã được preload\n\n      preloadFn()\n      preloadFn.isPreloaded = true\n    }, [inViewport])\n\n    return <DefaultLink {...props} ref={ref} />\n  })\n)\n\nexport { Link }\n","import { useMemo, useRef } from 'react'\nimport { useSize } from 'ahooks'\n\nconst useHeight = (): [React.MutableRefObject<null>, number] => {\n  const ref = useRef(null)\n  const size = useSize(ref)\n  const height = useMemo(() => size?.height || 0, [size])\n  return [ref, height]\n}\n\nexport { useHeight }\n","import styled from 'styled-components'\n\nconst Header = styled.header`\n  position: sticky;\n  top: 0;\n  left: 0;\n  background: white;\n  box-shadow: 0 1px 2px 0 rgb(0 0 0 / 0.05);\n`\n\nexport { Header }\n","import React from 'react'\nimport { lazy } from 'nc-lazy'\n\nconst getLayoutComponet = (\n  component: 'headers' | 'footers' | 'contents',\n  lazyFunction?: (factory: any) => React.LazyExoticComponent<any>\n) => {\n  const importedRoutes = (() => {\n    switch (component) {\n      case 'headers':\n        // @ts-expect-error\n        return import.meta.glob('/src/layouts/headers/*.tsx')\n      case 'footers':\n        // @ts-expect-error\n        return import.meta.glob('/src/layouts/footers/*.tsx')\n      case 'contents':\n        // @ts-expect-error\n        return import.meta.glob('/src/layouts/contents/*.tsx')\n      default:\n        return {}\n    }\n  })()\n  const output = {}\n  const lazyFunc = lazyFunction || lazy\n\n  for (const key in importedRoutes) {\n    // @ts-expect-error\n    output[\n      key.split(new RegExp(`/src/layouts/${component}/|.tsx$|/index.tsx$`, 'g')).join('') || 'index'\n    ] = lazyFunc(importedRoutes[key])\n  }\n\n  return output\n}\n\nexport { getLayoutComponet }\n","import React, { PropsWithChildren, useMemo } from 'react'\nimport { getLayoutComponet } from '../utils/getLayoutComponet'\n\nconst layouts = {\n  headers: getLayoutComponet('headers'),\n  footers: getLayoutComponet('footers'),\n  contents: getLayoutComponet('contents'),\n}\n\nconst LayoutComponent: React.FC<\n  PropsWithChildren<{ component: 'headers' | 'footers' | 'contents'; name: string }>\n> = React.memo(({ name, children, component }) => {\n  const Render = useMemo(() => {\n    if (name === 'none') return React.Fragment\n\n    const collections: Record<string, any> = layouts[component]\n    return collections[name] || collections['index'] || React.Fragment\n  }, [component, name])\n\n  return <Render>{children}</Render>\n})\n\nexport { LayoutComponent }\n","import styled from 'styled-components'\n\nconst Main = styled.main`\n  min-height: ${({\n    headerHeight = 0,\n    footerHeight = 0,\n  }: {\n    headerHeight?: number\n    footerHeight?: number\n  }) => `calc(100vh - ${headerHeight + footerHeight}px)`};\n`\n\nexport { Main }\n","import React, { Suspense, useMemo, useState } from 'react'\nimport { unstable_HistoryRouter as HistoryRouter } from 'react-router-dom'\nimport { CUSTOM_EVENTS } from '../constants/customEvents'\nimport { T_LayoutOptions } from '../hocs/withLayout'\nimport { useHeight } from '../hooks/useHeight'\nimport { watcher } from '../hooks/useWatcher'\nimport { history } from '../utils/history'\nimport { Header } from './Header'\nimport { LayoutComponent } from './LayoutComponent'\nimport { Main } from './Main'\nimport { Routes } from './Routes'\n\ntype T_RouterProvider = React.NamedExoticComponent<{\n  fallback?: React.ReactNode\n}>\n\nconst Router: T_RouterProvider = React.memo(({ fallback }) => {\n  const pathname = history.location.pathname\n  const [layout, setLayout] = useState<Record<string, T_LayoutOptions>>({})\n  const configs = useMemo(() => layout[pathname], [layout, pathname])\n  const [headerRef, headerHeight] = useHeight()\n  const [footerRef, footerHeight] = useHeight()\n\n  watcher.useWatcher<Record<string, T_LayoutOptions>>(CUSTOM_EVENTS.CHANGE_LAYOUTS, (options) => {\n    setLayout((prev) => ({ ...prev, ...options }))\n  })\n\n  return (\n    // @ts-expect-error\n    <HistoryRouter history={history}>\n      <Suspense fallback={fallback}>\n        {configs?.header && (\n          <Header ref={headerRef}>\n            <LayoutComponent component=\"headers\" name={configs.header} />\n          </Header>\n        )}\n\n        {configs?.content && (\n          <Main headerHeight={headerHeight} footerHeight={footerHeight}>\n            <LayoutComponent component=\"contents\" name={configs?.content}>\n              <Routes />\n            </LayoutComponent>\n          </Main>\n        )}\n\n        {Boolean(configs?.content) || (\n          <main>\n            <Routes />\n          </main>\n        )}\n\n        {configs?.footer && (\n          <footer ref={footerRef}>\n            <LayoutComponent component=\"footers\" name={configs?.footer} />\n          </footer>\n        )}\n      </Suspense>\n    </HistoryRouter>\n  )\n})\n\nexport { Router }\n","const CUSTOM_EVENTS = {\n  'CHANGE_LAYOUTS': 'CHANGE_LAYOUTS',\n}\n\nexport { CUSTOM_EVENTS }\n","import React, { useLayoutEffect } from 'react'\nimport { useLocation } from 'react-router-dom'\nimport { CUSTOM_EVENTS } from '../constants/customEvents'\nimport { watcher } from '../hooks/useWatcher'\n\ntype T_LayoutOptions = {\n  header?: string\n  content?: string\n  footer?: string\n}\n\nconst withLayout = (Comment: React.FC<any>, options?: T_LayoutOptions) => () => {\n  const { pathname } = useLocation()\n\n  useLayoutEffect(() => {\n    watcher.emitWatcher(CUSTOM_EVENTS.CHANGE_LAYOUTS, {\n      [pathname]: {\n        header: options?.header || 'index',\n        content: options?.content || 'index',\n        footer: options?.footer || 'index',\n      },\n    })\n  }, [])\n\n  return <Comment />\n}\n\nexport { withLayout }\nexport type { T_LayoutOptions }\n"],"names":["useWatcher","name","listener","useEventListener","detail","emitWatcher","data","dispatchEvent","createBrowserHistory","factory","isPreloaded","Component","React","lazy","all","resolve","then","moduleExports","factoryWithMinTime","lazyFunction","import","key","split","join","toLowerCase","test","path","console","warn","output","push","element","lazyFunc","importedRoutes","Render","preload","routes","map","o","pick","routePreloads","getRoutes","memo","forwardRef","props","forwardedRef","useRef","current","inViewport","useInViewport","ref","useMemo","to","pathname","JSON","stringify","find","r","targetPath","_routePreloads$find","useEffect","preloadFn","DefaultLink","useSize","size","height","styled","header","component","headers","getLayoutComponet","footers","contents","children","Fragment","layouts","collections","main","headerHeight","footerHeight","fallback","history","location","useState","layout","setLayout","useHeight","headerRef","footerRef","watcher","options","prev","HistoryRouter","Suspense","configs","Header","LayoutComponent","content","Main","Routes","Boolean","footer","Comment","useLocation","useLayoutEffect"],"mappings":"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"}